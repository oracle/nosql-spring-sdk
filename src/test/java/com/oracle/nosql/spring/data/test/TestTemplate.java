/*-
 * Copyright (c) 2020, 2023 Oracle and/or its affiliates.  All rights reserved.
 *
 * Licensed under the Universal Permissive License v 1.0 as shown at
 *  https://oss.oracle.com/licenses/upl/
 */
package com.oracle.nosql.spring.data.test;

import com.oracle.nosql.spring.data.core.NosqlTemplate;
import com.oracle.nosql.spring.data.repository.support.NosqlEntityInformation;
import com.oracle.nosql.spring.data.test.app.AppConfig;
import com.oracle.nosql.spring.data.test.app.Customer;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = AppConfig.class)
public class TestTemplate {

    @Test
    public void testCreate()
        throws ClassNotFoundException {
        NosqlTemplate template = NosqlTemplate.create(AppConfig.nosqlDBConfig);
        Assert.assertNotNull(template);
    }

    @Test
    public void testTableNameConverter()
        throws ClassNotFoundException {
        NosqlTemplate template = NosqlTemplate.create(AppConfig.nosqlDBConfig);
        Assert.assertNotNull(template);
        Assert.assertEquals("Customer",
            template.getTableName(Customer.class));

        Assert.assertNotNull(template.getConverter());
    }

    @SuppressWarnings("unchecked")
    @Test
    public void testDeleteAll()
        throws ClassNotFoundException {

        NosqlTemplate template = NosqlTemplate.create(AppConfig.nosqlDBConfig);

        NosqlEntityInformation<Customer, ?> customerEntInfo =
            template.getNosqlEntityInformation(Customer.class);

        customerEntInfo.setTimeout(10000);
        template.deleteAll(customerEntInfo);

        long count = template.count(customerEntInfo);
        Assert.assertEquals(0, count);

        Customer c = new Customer("Alice", "Smith", null);
        template.insert(c);
        long idAlice = c.customerId;

        c = new Customer("Bob", "Smith", null);
        template.insert(c);
        long idBob = c.customerId;

        c = template.findById(idAlice, Customer.class);
        Assert.assertEquals("Alice", c.firstName);

        c = template.findById(idBob, Customer.class);
        Assert.assertEquals("Bob", c.firstName);

        count = template.count(customerEntInfo);
        Assert.assertEquals(2, count);

        template.deleteAll(customerEntInfo);

        count = template.count(customerEntInfo);
        Assert.assertEquals(0, count);
    }

    @Test
    public void testRunTableRequest()
        throws ClassNotFoundException {

        NosqlTemplate template = NosqlTemplate.create(AppConfig.nosqlDBConfig);

        template.runTableRequest(
            "CREATE TABLE IF NOT EXISTS testUuid " +
                "(id STRING AS UUID GENERATED BY DEFAULT," +
                " kv_json_ JSON, PRIMARY KEY(id))");

        template.runTableRequest(
            "DROP TABLE IF EXISTS testUuid ");
    }
}
